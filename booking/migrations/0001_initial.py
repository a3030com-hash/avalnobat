# Generated by Django 5.2.7 on 2025-10-09 16:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Specialty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="نام تخصص"
                    ),
                ),
            ],
            options={
                "verbose_name": "تخصص",
                "verbose_name_plural": "تخصص\u200cها",
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("PATIENT", "Patient"),
                            ("DOCTOR", "Doctor"),
                            ("ADMIN", "Admin"),
                        ],
                        default="PATIENT",
                        max_length=10,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.TextField(verbose_name="آدرس مطب")),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="شماره تلفن مطب"),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="doctor_photos/",
                        verbose_name="عکس پزشک",
                    ),
                ),
                ("biography", models.TextField(blank=True, verbose_name="بیوگرافی")),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specialty",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="booking.specialty",
                        verbose_name="تخصص",
                    ),
                ),
            ],
            options={
                "verbose_name": "پروفایل پزشک",
                "verbose_name_plural": "پروفایل پزشکان",
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "appointment_datetime",
                    models.DateTimeField(verbose_name="زمان نوبت"),
                ),
                (
                    "patient_name",
                    models.CharField(max_length=100, verbose_name="نام بیمار"),
                ),
                (
                    "patient_phone",
                    models.CharField(max_length=20, verbose_name="شماره همراه بیمار"),
                ),
                (
                    "problem_description",
                    models.TextField(blank=True, verbose_name="شرح مشکل"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("BOOKED", "رزرو شده"),
                            ("COMPLETED", "تکمیل شده"),
                            ("CANCELED", "لغو شده"),
                            ("PENDING_PAYMENT", "در انتظار پرداخت"),
                        ],
                        default="PENDING_PAYMENT",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="بیمار",
                    ),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="booking.doctorprofile",
                        verbose_name="پزشک",
                    ),
                ),
            ],
            options={
                "verbose_name": "نوبت",
                "verbose_name_plural": "نوبت\u200cها",
                "ordering": ["-appointment_datetime"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "۱ ستاره"),
                            (2, "۲ ستاره"),
                            (3, "۳ ستاره"),
                            (4, "۴ ستاره"),
                            (5, "۵ ستاره"),
                        ],
                        verbose_name="امتیاز",
                    ),
                ),
                ("comment", models.TextField(blank=True, verbose_name="نظر")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "appointment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="booking.appointment",
                        verbose_name="نوبت مربوطه",
                    ),
                ),
            ],
            options={
                "verbose_name": "نظر",
                "verbose_name_plural": "نظرات",
            },
        ),
        migrations.CreateModel(
            name="DoctorAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (5, "شنبه"),
                            (6, "یکشنبه"),
                            (0, "دوشنبه"),
                            (1, "سه\u200cشنبه"),
                            (2, "چهارشنبه"),
                            (3, "پنجشنبه"),
                            (4, "جمعه"),
                        ],
                        verbose_name="روز هفته",
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        choices=[("MORNING", "صبح"), ("AFTERNOON", "بعدازظهر")],
                        max_length=10,
                        verbose_name="شیفت کاری",
                    ),
                ),
                ("start_time", models.TimeField(verbose_name="ساعت شروع")),
                ("end_time", models.TimeField(verbose_name="ساعت پایان")),
                (
                    "visit_count",
                    models.PositiveIntegerField(default=20, verbose_name="تعداد ویزیت"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="فعال/غیرفعال"),
                ),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="booking.doctorprofile",
                        verbose_name="پزشک",
                    ),
                ),
            ],
            options={
                "verbose_name": "زمان\u200cبندی پزشک",
                "verbose_name_plural": "زمان\u200cبندی پزشکان",
                "unique_together": {("doctor", "day_of_week", "shift")},
            },
        ),
    ]
